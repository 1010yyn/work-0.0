#include<fstream>
#include<iostream>
#include<string>
#include<iomanip>
#include<stdio.h>
using namespace std;
const int amount = 500;
int Amount, Sum;
const string file1 = "Students Manager1.txt";
const string file2 = "Students Manager2.txt";
const string file3 = "Course List.txt";
string filename, course[100];
ifstream ifile;
ofstream ofile;
void writecourse() {
	int i;
	ofile.open(file3);
	for (i = 0; i < Sum; i++) {
		ofile << course[i] << " ";
	}
	ofile << "end";
	ofile.close();
}//课程数据写入文件
void readcourse() {
	int i = 0;
	bool flag = true;
	ifile.open(file3);
	do {
		getline(ifile, course[i], ' ');
		if (course[i] == "end")
			flag = false;
		else if (course[0] == "") {
			course[0] = "end";
			flag = false;
		}
		else i++;
	} while (flag);
	Sum = i;
	ifile.close();
}//读取课程数据
void showcourse() {
	if (course[0] == "end")
		cout << "暂无可选课程。" << endl;
	else cout << "*****课 程 列 表*****" << endl;
	for (int i = 0; course[i] != "end"; i++)
		cout << "*" << setw(5) << i + 1 << "." << course[i] << setw(6) << "*" << endl;
	cout << "*********************" << endl;
}//显示课程列表
void addcourse() {
	string input;
	system("cls");
	cout << "******添加课程******" << endl;
	showcourse();
	cout << "请输入要添加的课程名或end返回上一级菜单：" << endl;
	cin >> input;
	if (input != "end") {
		course[Sum] = input;
		Sum++;
		course[Sum] = "end";
		cout << "添加成功!" << endl << endl;
		system("pause");
	}
}//添加课程
void changecourse() {
	int choose;
	system("cls");
	cout << "******修改课程******" << endl;
	showcourse();
	cout << "请选择要修改的课程序号或0返回上一级菜单:" << endl;
	cin >> choose;
	if (choose != 0) {
		choose--;
		cout << "请输入要修改的内容：" << endl;
		cin >> course[choose];
		cout << "修改成功!" << endl << endl;
		system("pause");
	}
}//修改课程
void deletecourse() {
	system("cls");
	cout << "******删除课程******" << endl;
	int choose, i;
	showcourse();
	cout << "【0】返回上一级菜单" << endl;
	cout << "请选择要删除的课程序号:" << endl;
	cin >> choose;
	if (choose != 0) {
		if (choose == Sum) {
			course[choose - 1] = "end";
			course[choose] = "";
		}
		else {
			for (i = choose - 1; course[i] != "end"; i++) {
				course[i] = course[i + 1];
			}
		}
		Sum--;
	}
	cout << "课程已删除！\n\n";
	system("pause");
}//删除课程
void mainmenu() {
	cout << "**********教 务 管 理 系 统*********" << endl;
	cout << "*       1. 学生注册管理            *" << endl;
	cout << "*       2. 选课课程信息管理        *" << endl;
	cout << "*       3. 成绩管理                *" << endl;
	cout << "*       0. 退出本系统             N*" << endl;
	cout << "************************************" << endl;
	cout << " 请选择(输入相应数字):                      " << endl;
}
void studentmenu() {
	cout << "***********学 生 管 理********" << endl;
	cout << "*      1.添加学生信息        *" << endl;
	cout << "*      2.修改学生信息        *" << endl;
	cout << "*      3.删除学生信息        *" << endl;
	cout << "*      4.浏览学生信息        *" << endl;
	cout << "*      0.返回上一级菜单      *" << endl;
	cout << "******************************" << endl;
	cout << "请选择：              " << endl;
}
void coursemenu() {
	cout << "*******课 程 信 息 管 理*******" << endl;
	cout << "*      1. 添加课程            *" << endl;
	cout << "*      2. 修改课程            *" << endl;
	cout << "*      3. 删除课程            *" << endl;
	cout << "*      4. 浏览课程            *" << endl;
	cout << "*      0. 返回上一级菜单      *" << endl;
	cout << "*******************************" << endl;
	cout << "请选择(输入相应数字)：" << endl;
}
void scoremenu() {
	cout << "***********成 绩 管 理********" << endl;
	cout << "* 1.查询班级课程不及格名单   *" << endl;
	cout << "* 2.查询课程成绩年级前五名   *" << endl;
	cout << "* 3.查询班级课程平均成绩排名 *" << endl;
	cout << "* 4.查询班级课程成绩单       *" << endl;
	cout << "* 5.查询课程选修者名单       *" << endl;
	cout << "* 6.查询学生本学期成绩单     *" << endl;
	cout << "* 0.返回上一级菜单           *" << endl;
	cout << "*******************************" << endl;
	cout << "请选择：                                   " << endl;
}
int compare(string a, string b) {
	if (a.length() == b.length()) {//位数相等时
		if (a.length() == 2) {//两位数
			if (a[0] > b[0])
				return 1;
			else if (a[0] < b[0])
				return 2;
			else if (a[0] == b[0])
				if (a[1] > b[1])
					return 1;
				else if (a[1] < b[1])
					return 2;
				else if (a[1] == b[1])
					return 0;
		}
		else if (a.length() > 2)//三位数
			return 0;
		else if (a.length() < 2)//一位数
			if (a[0] > b[0])
				return 1;
			else if (a[0] < b[0])
				return 2;
			else if (a[0] == b[0])
				return 0;
	}
	else if (a.length() > b.length())
		return 1;
	else return 2;
}//比较字符串型数字大小
int exchange(string a) {
	switch (a.length()) {
	case 1:return (a[0] - 48); break;
	case 2:return ((a[0] - 48) * 10 + a[1] - 48); break;
	case 3:return 100; break;
	}
}//string换成int型
int termchoose() {
	int term;
loop:cout << "请选择学期(1/2):" << endl;
	cin >> term;
	cout << endl;
	if (term == 1 || term == 2) {
		switch (term) {
		case 1:cout << "第一学期：" << endl; break;
		case 2:cout << "第二学期：" << endl; break;
		default:cout << "输入错误！\n请重新输入："; goto loop; break;
		}
	}
	return term;
}
struct Course {
	string CourseName;
	string score1;
	string score2;
};
class Student {
private:
	string Class;
	string StudentID;
	string name;
	Course Cour[11][2];//选修课程，两学期，最多十门课
public:
	Student(string cls = "", string id = "", string nm = "") :Class(cls), StudentID(id), name(nm) {}
	void getClass(string cls) { Class = cls; }
	void getID(string id) { StudentID = id; }
	void getname(string name_) { name = name_; }
	void getCourse(string course, int term, int i) { Cour[i][term - 1].CourseName = course; }
	void getscore1(string score, int term, int i) { Cour[i][term - 1].score1 = score; }
	void getscore2(string score, int term, int i) { Cour[i][term - 1].score2 = score; }
	void showclasslist(int term);
	void showall();
	string showClass() { return Class; }
	string showID() { return StudentID; }
	string showname() { return name; }
	string showCourse(int term, int i) { return Cour[i][term - 1].CourseName; }
	string showscore1(int term, int i) { return Cour[i][term - 1].score1; }
	string showscore2(int term, int i) { return Cour[i][term - 1].score2; }
};
void Student::showclasslist(int term) {
	cout << "*****已 选 课 程******" << endl;
	for (int i = 0; Cour[i][term - 1].CourseName != "end"&&Cour[i][term - 1].CourseName != ""; i++)
		cout << "*" << setw(6) << i + 1 << "." << Cour[i][term - 1].CourseName << setw(6) << "*" << endl;
	cout << "**********************" << endl;
}
void Student::showall() {
	int i, term;
	cout << "***************************\n";
	cout << " 班级： 学号：      姓名：\n";
	cout << " " << Class << "   " << StudentID << "  " << name << endl << endl;
	for (term = 1; term < 3; term++) {
		if (term == 1)
			cout << "第一学期：" << endl;
		else cout << "第二学期：" << endl;
		cout << setw(6) << "选修课程:" << setw(15) << "考试成绩：" << setw(14) << "补考成绩：" << endl;
		for (i = 0; Cour[i][term - 1].CourseName != "end"; i++) {
			cout << setw(6) << Cour[i][term - 1].CourseName << setw(11) << Cour[i][term - 1].score1 << setw(15) << Cour[i][term - 1].score2 << endl;
		}
		cout << endl;
	}
	cout << "***************************\n";
}
class System {
private:
	string Class;//班级（临时变量）
	string StudentID;//学生学号（临时变量）
	string name;//姓名（临时变量）
	Course Cour[11];//课程（临时变量）
public:
	System(Student A[amount])
	{
		getDatas(A);
		Class = ""; StudentID = ""; name = "";
	}
	void getDatas(Student A[]);//读取所有学生信息
	void inputDatas(Student A[]);//学生信息保存
	void addData(Student A[]);//录入学生信息
	void changeData(Student A[]);//修改学生信息
	void deleteData(Student A[]);//删除学生信息
	void showData(Student A[]);//浏览学生信息
	void outputFailer(Student A[]);//某课程班级挂科名单
	void outputFirstFive(Student A[]);//课程前五名
	void outputAverage(Student A[]);//班级平均成绩排名
	void outputGradeList(Student A[]);//课程班级成绩排名
	void outputCourseALLPersonList(Student A[]);//选修学生名单
	void outputPersonGradeList(Student A[]);//查询学生成绩
};
void System::getDatas(Student A[]) {
	int  term, j, i, k, no;//计数器i，j，第no位学生
	string classname, id, name, temp, course;
	bool flag;
	for (term = 1; term <= 2; term++) {
		switch (term) {
		case 1:filename = file1; no = 0, flag = true; break;
		case 2:filename = file2; no = 0, flag = true; break;
		}
		ifile.open(filename);
		if (ifile.good()) {
			i = 0;
			while (!ifile.eof()) {
				for (flag = true, k = 0; k <= 10; k++)
					Cour[k].CourseName = Cour[k].score1 = Cour[k].score2 = "";
				classname = id = name = temp = "";//重置
				getline(ifile, temp, ' ');//班级：
				if (temp == ""&&term == 1) {
					ifile.close();
					goto loop;
				}
				else if (temp == ""&&term == 2) {
					ifile.close();
					goto loop2;
				}
				getline(ifile, classname, '\n');
				A[no].getClass(classname);//录入班级
				getline(ifile, temp, ' ');//学号：
				getline(ifile, id, '\n');
				A[no].getID(id);//录入学号
				getline(ifile, temp, ' ');//姓名：
				getline(ifile, name, '\n');
				A[no].getname(name);//录入姓名
				j = 0;
				do {
					getline(ifile, Cour[j].CourseName, ' ');//课程名
					A[no].getCourse(Cour[j].CourseName, term, j);
					if (Cour[j].CourseName == "end") {
						getline(ifile, Cour[j].score1, ' ');
						A[no].getscore1(Cour[j].score1, term, j);
						getline(ifile, Cour[j].score2, '\n');
						A[no].getscore2(Cour[j].score2, term, j);
						flag = false;
					}
					else {
						getline(ifile, Cour[j].score1, ' ');
						A[no].getscore1(Cour[j].score1, term, j);
						getline(ifile, Cour[j].score2, ' ');//成绩
						A[no].getscore2(Cour[j].score2, term, j);
					}
					j++;
				} while (flag);//将课程和成绩读出
				no++;//结束录入后等于学生数量
			}//搜索整个文件直至结束
		}
	loop:;
	}
loop2:Amount = no;
}
void System::inputDatas(Student A[]) {
	int no, j, term;
	for (term = 1; term <= 2; term++) {
		if (term == 1)
			filename = file1;
		else filename = file2;
		ofile.open(filename);
		for (no = 0; no < Amount; no++) {
			ofile << "班级： " << A[no].showClass() << endl << "学号： " << A[no].showID() << endl << "姓名： " << A[no].showname() << endl;
			for (j = 0; A[no].showCourse(term, j) != "end"; j++)
				ofile << A[no].showCourse(term, j) << " " << A[no].showscore1(term, j) << " " << A[no].showscore2(term, j) << " ";
			ofile << "end 0 0\n";
		}//数据写入文件
		ofile.close();
	}
}
void System::addData(Student A[])
{
	int  j, no = Amount/*当前学生序号*/, term, subject, choose;//计数器i，j，第no位学生
	bool flag;
	string classname, id, name;
	cout << "请输入学生基本信息（班级，学号，姓名）\n或输入end返回上一级菜单：" << endl;
	cin >> Class;
	if (Class != "end") {
		cin >> StudentID >> name;
		cout << endl;
		A[no].getClass(Class);
		A[no].getID(StudentID);
		A[no].getname(name);
	loop3:showcourse();
		term = termchoose();
	loop2:switch (term) {
	case 1:term = 1; break;
	case 2:term = 2; break;
	default:cout << "输入错误！\n请重新输入："; cin >> term; goto loop2; break;
	}
		  cout << "请录入该学生选修课程（输入数字选择，以0结束）：" << endl;
		  for (j = 0, flag = true/*进入循环*/; flag; j++) {
			  cin >> subject;
			  if (subject == 0) {
				  j--;
				  flag = false;
			  }
			  else {
				  A[no].getCourse(course[subject - 1], term, j);
				  A[no].getscore1("暂无", term, j);
				  A[no].getscore2("暂无", term, j);
			  }
		  }
		  A[no].getCourse("end", term, j);
		  A[no].getscore1("0", term, j);
		  A[no].getscore2("0", term, j);
		  cout << endl << "选课完成，是否退出选课？\n1. 是\n2. 否\n";
		  cin >> choose;
		  if (choose == 1) {
			  switch (term) {
			  case 1:
				  if (A[no].showCourse(2, 0) == "") {
					  A[no].getCourse("end", 2, 0);
					  A[no].getscore1("0", 2, 0);
					  A[no].getscore2("0", 2, 0);
				  }
				  break;
			  case 2:
				  if (A[no].showCourse(1, 0) == "") {
					  A[no].getCourse("end", 1, 0);
					  A[no].getscore1("0", 1, 0);
					  A[no].getscore2("0", 1, 0);
				  }
				  break;
			  }
			  system("cls");
			  goto loop1;
		  }
		  else if (choose == 2)
			  goto loop3;
	  loop1:Amount++;//学生总数+1
		  cout << endl;
	}
	else	system("cls");
}
void System::changeData(Student A[]) {
	string input;
	int i, k, choose, choose2, term;
	bool flag = false;
loop:cout << "请输入您需要修改信息的学生的学号\n或end返回上一级菜单：" << endl;
	cin >> input;
	if (input != "end") {
		for (i = 0; i < Amount; i++)
			if (A[i].showID() == input) {
				flag = true;
				break;
			}
		if (flag == true) {
			A[i].showall();
			cout << "请选择您需要修改的项目:" << endl;
			cout << "1. 班级\n2. 学号\n3. 姓名\n4. 选修课程\n5. 课程成绩\n";
			cin >> choose;
			switch (choose) {
			case 1:cout << "请输入修改后的班级号：\n"; cin >> input; A[i].getClass(input); break;
			case 2:cout << "请输入修改后的学号：\n"; cin >> input; A[i].getID(input); break;
			case 3:cout << "请输入修改后的姓名：\n"; cin >> input; A[i].getname(input); break;
			case 4:
				term = termchoose();
				A[i].showclasslist(term);
				cout << "请选择修改项目：\n1.修改课程\n2.添加课程\n";
				cin >> choose;
				if (choose == 1) {
					cout << "可选课程列表：" << endl;
					showcourse();
					cout << "请输入要修改的课程序号以及修改后的课程序号：\n";
					cin >> choose >> choose2;
					A[i].getCourse(course[choose2 - 1], term, choose - 1);
				}
				else if (choose == 2) {
					cout << "可选课程列表：" << endl;
					showcourse();
					cout << "请输入要添加的课程序号：\n";
					cin >> choose;
					for (k = 0; A[i].showCourse(term, k) != "end"; i++);
					A[i].getCourse(course[choose - 1], term, i);
					A[i].getCourse("end", term, i + 1);
				}
				break;
			case 5:
				term = termchoose();
				A[i].showclasslist(term);
				cout << "\n请输入要修改成绩的课程序号:\n";
				cin >> choose;
				cout << "\n请选择修改的成绩类型：\n1. 考试成绩\n2. 补考成绩\n";
				cin >> choose2;
				if (choose2 == 1) {
					cout << "\n请输入成绩：" << endl;
					cin >> input;
					A[i].getscore1(input, term, choose - 1);
				}
				if (choose2 == 2) {
					cout << "\n请输入成绩：" << endl;
					cin >> input;
					A[i].getscore2(input, term, choose - 1);
				}
				break;
			}
		}
		else {
			cout << "\n该学生不存在！\n请重新输入：\n";
			goto loop;
		}
		cout << "修改成功！\n";
		system("pause");
	}
	else;
	system("cls");
}
void System::deleteData(Student A[]) {
	string input;
	int i, j, k, term;
	bool flag = false;
	cout << "***************************\n";
	cout << " 班级： 学号：      姓名：\n";
	for (i = 0; i < Amount; i++) {
		cout << " " << A[i].showClass() << "   " << A[i].showID() << "  " << A[i].showname() << endl;
	}
	cout << "***************************\n";
	cout << "【0】返回上一级菜单" << endl;
	cout << "请输入要删除信息的学生学号\n";
loop:cin >> input;
	if (input != "0") {
		for (i = 0; i < Amount; i++)
			if (A[i].showID() == input) {
				flag = true;
				break;
			}
		if (flag == true) {
			for (term = 1; term <= 2; term++) {
				if (i == Amount - 1) {
					A[i].getClass("");
					A[i].getID("");
					A[i].getname("");
					for (k = 0; A[i].showCourse(term, k) != "end"; k++) {
						A[i].getCourse("", term, k);
						A[i].getscore1("", term, k);
						A[i].getscore2("", term, k);
					}
					A[i].getCourse("", term, k);
					A[i].getscore1("", term, k);
					A[i].getscore2("", term, k);
				}
				else {
					for (j = i; j < Amount - 1; j++) {
						A[j].getClass(A[j + 1].showClass());
						A[j].getID(A[j + 1].showID());
						A[j].getname(A[j + 1].showname());
						for (k = 0; A[j + 1].showCourse(term, k) != "end"; k++) {
							A[j].getCourse(A[j + 1].showCourse(term, k), term, k);
							A[j].getscore1(A[j + 1].showscore1(term, k), term, k);
							A[j].getscore2(A[j + 1].showscore2(term, k), term, k);
						}
					}
					A[j].getCourse("end", term, k);
					A[j].getscore1("0", term, k);
					A[j].getscore2("0", term, k);
				}
			}
			Amount--;
			cout << "删除成功！\n";
			system("pause");
		}
		else {
			cout << "输入错误，该学生信息不存在！\n请重新输入：\n";
			system("pause");
			goto loop;
		}
	}
	system("cls");
}
void System::showData(Student A[]) {
	int i;
	string input;
	bool flag;
	cout << "***************************\n";
	cout << " 班级： 学号：      姓名：\n";
	for (i = 0; i < Amount; i++) {
		cout << " " << A[i].showClass() << "   " << A[i].showID() << "  " << A[i].showname() << endl;
	}
	cout << "***************************\n";
	cout << "【0】返回上一级菜单" << endl;
	cout << "请输入要查看具体信息的学生学号：\n";
loop2:cin >> input;
	if (input != "0") {
		for (i = 0; i < Amount; i++)
			if (A[i].showID() == input) {
				flag = true;
				break;
			}
		if (flag == true) {
			A[i].showall();
			system("pause");
		}
		else {
			system("cls");
			cout << "输入错误，该学生信息不存在！\n请重新输入：\n";
			goto loop2;
		}
	}
	system("cls");
}
void System::outputFailer(Student A[]) {
	int i, j, count, term, choose;//，计数器i,j,count
	bool flag = false;
	string Classname, coursename;
	cout << "请选择您查询的不及格名单的课程名及班级号:" << endl;
	showcourse();
	cout << "【0】返回上一级菜单" << endl;
loop1:cin >> choose;
	if (choose != 0) {
		cin >> Classname;
		cout << endl;
		if (course[choose - 1] != "end"&&course[choose - 1] != "")
		{
			coursename = course[choose - 1];
			term = termchoose();
			cout << "班级：     学号：       姓名：      成绩：     补考成绩：\n";
			for (i = 0, count = 0; i < Amount; i++) {
				for (j = 0; A[i].showCourse(term, j) != "end"; j++)
					if (A[i].showClass() == Classname)
					{
						flag = true;
						if (exchange(A[i].showscore1(term, j)) < 60 && A[i].showCourse(term, j) == coursename) {
							count++;
							cout << A[i].showClass() << setw(14) << A[i].showID() << setw(12) << A[i].showname() << setw(10) << A[i].showscore1(term, j) << setw(12) << A[i].showscore2(term, j) << endl;
						}
					}
			}
			if (flag == false)
			{
				cout << "输入错误，该班级不存在！\n请重新输入：\n";
				goto loop1;
			}
			else if (count == 0)
				cout << endl << "该课程没有学生不及格。" << endl << endl;
		}
		else {
			cout << "输入错误，该课程号不存在！请重新选择：" << endl;
			goto loop1;
		}
		system("pause");
	}
}
void System::outputFirstFive(Student A[]) {
	int term, i, j, k, t, max, choose;//计数器
	string student[100][5], temp, coursename;//班级，学号，姓名，成绩1，成绩2
	cout << "请选择您查询的全年级前五名的课程名:" << endl;
	showcourse();
	cout << "【0】返回上一级菜单" << endl;
loop1:cin >> choose;
	if (choose != 0) {
		cout << endl;
		if (course[choose - 1] != "end"&&course[choose - 1] != "")
			coursename = course[choose - 1];
		else {
			cout << "输入错误！请重新选择：" << endl;
			goto loop1;
		}
		term = termchoose();
		for (i = 0, k = 0; i < Amount; i++) {
			for (j = 0; A[i].showCourse(term, j) != "end"; j++)
				if (A[i].showCourse(term, j) == coursename) {
					student[k][0] = A[i].showClass();
					student[k][1] = A[i].showID();
					student[k][2] = A[i].showname();
					student[k][3] = A[i].showscore1(term, j);
					student[k][4] = A[i].showscore2(term, j);
					k++;
				}
		}
		if (k >= 5)
			max = 5;
		else if (k > 0 && k < 5) {
			max = k;
			cout << "该课程选修学生不足五名，输出所有学生成绩：" << endl;
		}
		else if (k == 0) {
			cout << "该课程没有学生选修。\n";
			goto loop;
		}
		for (t = 0; t < max; t++)
			for (i = k - 1; i > t; i--)
				if (compare(student[i][3], student[i - 1][3]) == 1 || compare(student[i][3], student[i - 1][3]) == 0) {
					temp = student[i - 1][0];
					student[i - 1][0] = student[i][0];
					student[i][0] = temp;
					temp = student[i - 1][1];
					student[i - 1][1] = student[i][1];
					student[i][1] = temp;
					temp = student[i - 1][2];
					student[i - 1][2] = student[i][2];
					student[i][2] = temp;
					temp = student[i - 1][3];
					student[i - 1][3] = student[i][3];
					student[i][3] = temp;
					temp = student[i - 1][4];
					student[i - 1][4] = student[i][4];
					student[i][4] = temp;
				}
		cout << "班级：     学号：       姓名：      成绩：     补考成绩：\n";
		for (i = 0; i < 5; i++)
			cout << student[i][0] <<setw(14)<< student[i][1] << setw(11) << student[i][2] << setw(10) << student[i][3] << setw(15) << student[i][4] << endl;
	loop:system("pause");
	}
}//课程前五名
void System::outputAverage(Student A[]) {
	int i, j, t, k, choose, term, count1, count2 = 0;//读取无关内容，计数器i,j,t,k，分数
	float sum, temp2;//总分
	bool flag = false;
	string temp1, coursename, classlist[100];
	struct Classresult {
		string classname;
		float average;
	}classes[100];
loop1:cout << "请选择您查询的班级平均成绩排名的课程名:" << endl;
	showcourse();
	cout << "【0】返回上一级菜单" << endl;
	cin >> choose;
	if (choose != 0) {
		cout << endl;
		if (course[choose - 1] != "end"&&course[choose - 1] != "")
			coursename = course[choose - 1];
		else {
			cout << "输入错误！请重新选择：" << endl;
			goto loop1;
		}
		term = termchoose();
		classlist[0] = A[0].showClass();
		for (j = 1, count1 = 1; j < Amount; j++) {
			for (t = 0; t < count1; t++)
				if (A[j].showClass() == classlist[t]) {
					flag = true;
					break;
				}
			if (flag == false) {
				classlist[count1] = A[j].showClass();
				count1++;
			}
		}//班级数
		for (j = 0; j < count1; j++) {//班级
			for (i = 0, k = 0, sum = 0; i < Amount; i++) {//学生中搜索
				for (t = 0; A[i].showCourse(term, t) != "end"; t++) {//搜索课程
					if (A[i].showCourse(term, t) == coursename) {
						if (A[i].showClass() == classlist[j]) {
							if (A[i].showscore1(term, t) != "暂无") {
								sum += exchange(A[i].showscore1(term, t));
								k++;//人数
							}
						}
					}
					if (k > 0)
						count2++;
				}
			}
			if (k > 0) {
				classes[j].classname = classlist[j];
				classes[j].average = sum / k;
			}
		}
		if (count2 == 0)
			cout << "该课程没有学生选修。" << endl;
		else {
			for (i = 0; i < count1; i++)
				for (j = count1 - 1; j > i; j--) {
					if (classes[j].average > classes[j - 1].average) {
						temp1 = classes[j - 1].classname;
						temp2 = classes[j - 1].average;
						classes[j - 1].classname = classes[j].classname;
						classes[j - 1].average = classes[j].average;
						classes[j].classname = temp1;
						classes[j].average = temp2;
					}
				}
			cout << "班级：         平均分：          名次：\n";
			for (t = 0, k = 1; t < count1; t++) {
				if (classes[t].classname == "")
					continue;
				else {
					cout << classes[t].classname << "            ";
					printf("%.2f        ", classes[t].average);
					cout << "      " << k << endl;
					k++;
				}
			}
		}
		cout << endl;
		system("pause");
	}
}
void System::outputGradeList(Student A[]) {
	int i, j, k, t, count1, count2, term, choose;//读取无关内容，计数器i,j
	string temp, coursename, student[100][5];//班级，学号，姓名，成绩
	cout << "请选择您查询成绩单的课程名:" << endl;
loop1:showcourse();
	cout << "【0】返回上一级菜单" << endl;
	cin >> choose;
	if (choose != 0) {
		cout << endl ;
		if (course[choose - 1] != "end"&&course[choose - 1] != "")
			coursename = course[choose - 1];
		else {
			cout << "输入错误！请重新选择：" << endl;
			goto loop1;
		}
		term = termchoose();
		cout << "请输入要查询成绩排名的班级号：\n";
	loop3:cin >> Class;
		for (i = 0, k = 0, count1 = 0, count2 = 0; i < Amount; i++) {
			for (j = 0; A[i].showClass() == Class&&A[i].showCourse(term, j) != "end"; j++) {
				count2++;//判断班级是否存在
				if (A[i].showCourse(term, j) == coursename) {
					student[k][0] = Class;
					student[k][1] = A[i].showID();
					student[k][2] = A[i].showname();
					student[k][3] = A[i].showscore1(term, j);
					student[k][4] = A[i].showscore2(term, j);
					count1++;
					k++;
					break;
				}
			}
		}
		if (count2 == 0) {
			cout << "班级号输入错误！请重新输入：" << endl;
			goto loop3;
		}
		else if (count1 == 0)
			cout << "该课程没有学生选修。\n" << endl;
		else {
			for (t = 0; t < k; t++)
				for (i = k - 1; i > t; i--)
					if (compare(student[i][3], student[i - 1][3]) == 1 || compare(student[i][3], student[i - 1][3]) == 0) {
						temp = student[i - 1][0];
						student[i - 1][0] = student[i][0];
						student[i][0] = temp;
						temp = student[i - 1][1];
						student[i - 1][1] = student[i][1];
						student[i][1] = temp;
						temp = student[i - 1][2];
						student[i - 1][2] = student[i][2];
						student[i][2] = temp;
						temp = student[i - 1][3];
						student[i - 1][3] = student[i][3];
						student[i][3] = temp;
						temp = student[i - 1][4];
						student[i - 1][4] = student[i][4];
						student[i][4] = temp;
					}
			cout << "\n班级：     学号：       姓名：      成绩：     补考成绩：\n";
			for (t = 0; t < k; t++)
				cout << student[t][0] << setw(14) << student[t][1] << setw(11) << student[t][2] << setw(10) << student[t][3] << setw(14) << student[t][4] << endl;
		}
		system("pause");
	}
}
void System::outputCourseALLPersonList(Student A[]) {
	int i, j, count, term, choose;//读取无关内容，计数器i,j
	string coursename;
	cout << "请选择您查询的选修者名单的课程名:" << endl;
	showcourse();
	cout << "【0】返回上一级菜单" << endl;
loop:cin >> choose;
	if (choose != 0) {
		if (course[choose - 1] != "end"&&course[choose - 1] != "")
			coursename = course[choose - 1];
		else {
			cout << "输入错误！请重新选择：" << endl;
			goto loop;
		}
		cout << endl;
		term = termchoose();
		cout << "班级：       学号：      姓名： " << endl;
		for (i = 0, count = 0; i < Amount; i++) {
			for (j = 0; A[i].showCourse(term, j) != "end"; j++)
				if (A[i].showCourse(term, j) == coursename) {
					cout << A[i].showClass() <<setw(16) << A[i].showID() << setw(10) << A[i].showname() << endl;
					count++;
				}
		}
		if (count == 0)
			cout << "该课程没有学生选修。\n";
		system("pause");
	}
}//某课程选修名单
void System::outputPersonGradeList(Student A[]) {
	int i, t, term;
	bool flag = false;
	cout << "请选择您查询成绩单的学生学号\n或输入end返回上一级:" << endl;
loop:cin >> StudentID;
	if (StudentID != "end") {
		cout << endl;
		for (i = 0; i < Amount&&flag == false; i++) {
			if (A[i].showID() == StudentID) {
				i--;
				flag = true;
			}
		}
		if (flag == true) {
			term = termchoose();
			cout << "班级： " << A[i].showClass() << "     学号： " << StudentID << "     姓名： " << A[i].showname() << endl << endl;
			cout << " 课程：       成绩：     补考成绩：\n";
			for (t = 0; A[i].showCourse(term, t) != "end"; t++) {
				cout << A[i].showCourse(term, t) << setw(9) << A[i].showscore1(term, t) << setw(15) << A[i].showscore2(term, t) << endl;
			}
			cout << endl << "输出成功！" << endl << endl;
			system("pause");
		}
		else {
			cout << "输入错误，该学号不存在！\n请重新输入：\n";
			goto loop;
		}
	}
}
void main() {
	Student A[amount];
	System system1(A);
	int option, option1, option2, option3;// 操作,班级序号
	string id, classname;//学号、课程名（临时参数）、班级号
	readcourse();
loop:mainmenu();
start:cin >> option;
	cout << endl;
	system("cls");
	switch (option) {
	case 1:goto loop1; break;//学生注册管理
	case 2:goto loop2; break;//选课信息管理（ok）
	case 3: goto loop3; break;//成绩管理（ok）
	case 0: writecourse(); system1.inputDatas(A); exit(0); break;
	default:cout << "输入错误！\n请重新输入：\n"; goto start; break;
	}
loop1:studentmenu();
start1:cin >> option1;
	switch (option1) {
	case 1:system("cls"); system1.addData(A); goto loop1; break;//添加
	case 2:system("cls"); system1.changeData(A); goto loop1; break;//修改
	case 3:system("cls"); system1.deleteData(A); goto loop1; break;//删除
	case 4:system("cls"); system1.showData(A); goto loop1; break;//浏览
	case 0:system("cls"); goto loop; break; //返回上一级菜单
	default:cout << "输入错误！\n请重新输入：" << endl; goto start1; break;
	}
loop2:coursemenu();
start2:cin >> option2;
	switch (option2) {
	case 1: addcourse(); system("cls"); goto loop2; break;//添加
	case 2:changecourse(); system("cls"); goto loop2; break;//修改
	case 3:deletecourse(); system("cls"); goto loop2; break;//删除
	case 4:	system("cls"); cout << "******浏览课程******" << endl; showcourse(); system("pause"); system("cls"); goto loop2; break;//浏览
	case 0:system("cls"); goto loop; break;
	default:cout << "输入错误！\n请重新输入：" << endl; goto start2; break;
	}
loop3:scoremenu();
start3:cin >> option3;
	switch (option3) {
	case 0:system("cls"); goto loop; break;
	case 1:
		system("cls");
		system1.outputFailer(A);
		system("cls");
		goto loop3;
		break;
	case 2:
		system("cls");
		system1.outputFirstFive(A);
		system("cls");
		goto loop3;
		break;
	case 3:
		system("cls");
		system1.outputAverage(A);
		system("cls");
		goto loop3;
		break;
	case 4:
		system("cls");
		system1.outputGradeList(A);
		system("cls");
		goto loop3;
		break;
	case 5:
		system("cls");
		system1.outputCourseALLPersonList(A);
		system("cls");
		goto loop3;
		break;
	case 6:
		system("cls");
		system1.outputPersonGradeList(A);
		system("cls");
		goto loop3;
		break;
	default:
		cout << "输入错误！\n请重新输入." << endl;
		goto start3;
		break;
	}
}
